{"version":3,"sources":["api/getRemByID.js","utils/nthOccurence.js","utils/dom.js","utils/dedupeArr.js","utils/buildData.js","App.js","serviceWorker.js","index.js"],"names":["getRemByID","remId","window","RemNoteAPI","v0","get","nthOccurrence","string","char","nth","first_index","indexOf","length_up_to_first_index","next_occurrence","slice","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","convertStringToHtml","DOMParser","parseFromString","body","firstChild","dedupeArr","arr","reduce","acc","current","find","item","id","concat","globalSlotRems","contentRems","getName","name","a","visibleRems","isWithAnchor","Array","isArray","Promise","all","filter","n","i","map","r","x","latexString","katex","renderToString","text","throwOnError","url","width","existingRem","o","_id","push","names","undefined","innerNames","join","getContent","content","nest","innerContent","get_context","context","documentId","documentRem","visibleRemOnDocument","e","found","v","nameWithAnchor","nameText","split","idx","graphElements","index","title","fifthBreakIndex","processedTitle","substr","data","fullTitle","nodeColor","isDocument","forEach","children","length","c","source","target","target_arrow_shape","some","g","bootstrapData","makePopper","ele","ref","popperRef","dummyDomEle","tippy","onCreate","instance","popperInstance","reference","lazy","plugins","sticky","contentdiv","titleEl","appendChild","contentEl","arrow","placement","hideOnClick","multiple","interactive","appendTo","trigger","Home","useEffect","getGraphElements","filteredGraphElements","s","cytoscape","use","coseBilkent","popper","cy","container","getElementById","elements","style","selector","label","color","height","opacity","layout","quality","nodeDimensionsIncludeLabels","fit","padding","randomize","nodeRepulsion","idealEdgeLength","edgeElasticity","nestingFactor","gravity","numIter","tile","animate","animationDuration","tilingPaddingVertical","tilingPaddingHorizontal","gravityRangeCompound","gravityCompound","gravityRange","initialEnergyOnIncremental","ready","isNode","unbind","bind","event","show","hide","on","sel","difference","outgoers","union","incomers","not","addClass","removeClass","handleFocus","element","$","dataset","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4b58345f.chunk.js","sourcesContent":["// import request from \"../utils/request\";\n// import { apiKey, userId } from \"../constants/common\";\n// import getIsLocal from \"../utils/isLocal\";\n\n// const isLocal = getIsLocal();\n\nconst getRemByID = (remId) => {\n  return window.RemNoteAPI.v0.get(remId);\n};\n\nexport default getRemByID;\n","function nthOccurrence(string, char, nth) {\n  var first_index = string.indexOf(char);\n  var length_up_to_first_index = first_index + 1;\n\n  if (nth === 1) {\n    return first_index;\n  } else {\n    var string_after_first_occurrence = string.slice(length_up_to_first_index);\n    var next_occurrence = nthOccurrence(\n      string_after_first_occurrence,\n      char,\n      nth - 1\n    );\n\n    if (next_occurrence === -1) {\n      return -1;\n    } else {\n      return length_up_to_first_index + next_occurrence;\n    }\n  }\n}\n\nexport default nthOccurrence;\n","export function stripHtml(html) {\n  var tmp = document.createElement('div');\n  tmp.innerHTML = html;\n  return tmp.textContent || tmp.innerText || '';\n}\n\nexport function convertStringToHtml(string) {\n  // var wrapper = document.createElement('div');\n  // wrapper.innerHTML = ;\n  // return wrapper.firstChild;\n  var parser = new DOMParser();\n  var doc = parser.parseFromString(`<div>${string}</div>`, 'text/html');\n  return doc.body.firstChild;\n}\n","const dedupeArr = (arr) =>\n  arr.reduce((acc, current) => {\n    const x = acc.find((item) => item.id === current.id);\n    if (!x) {\n      return acc.concat([current]);\n    } else {\n      return acc;\n    }\n  }, []);\n\nexport default dedupeArr;\n","import katex from \"katex\";\nimport getRemByID from \"../api/getRemByID\";\nimport nthOccurrence from \"./nthOccurence\";\nimport { stripHtml } from \"./dom\";\nimport dedupeArr from \"./dedupeArr\";\n// import getIsLocal from \"../utils/isLocal\";\n\nconst globalSlotRems = [];\nconst contentRems = [];\n\nasync function getName(name, visibleRems = [], remId, isWithAnchor) {\n  if (Array.isArray(name)) {\n    const names = await Promise.all(\n      name\n        .filter(\n          (n) =>\n            typeof n === \"string\" || n.i === \"q\" || n.i === \"i\" || n.i === \"m\"\n        )\n        .map(async (r) => {\n          if (typeof r === \"string\") {\n            return r;\n          }\n\n          if (r.i === \"m\") {\n            if (r.x === true) {\n              const latexString = katex.renderToString(r.text, {\n                throwOnError: false,\n              });\n              return latexString;\n            }\n            return r.text;\n          }\n\n          if (r.i === \"i\") {\n            return `<img src=${r.url} width=${r.width} height={r.height} />`;\n          }\n\n          const existingRem = [...globalSlotRems, ...visibleRems].find(\n            (o) => o._id === r._id\n          );\n          if (existingRem) {\n            return {\n              remId: existingRem._id,\n              name: existingRem.name,\n            };\n          }\n          const a = await getRemByID(r._id);\n          globalSlotRems.push(a);\n          return {\n            remId: a._id,\n            name: a.name,\n          };\n        })\n    );\n\n    const innerNames = await Promise.all(\n      names.map(async (r) => {\n        if (typeof r === \"string\") {\n          return r;\n        }\n        return isWithAnchor\n          ? `<a href=\"#\" data-source=\"${remId}\" data-target=\"${\n              r.remId\n            }\" onclick=\"handleFocus(this)\">${await getName(\n              r.name,\n              visibleRems,\n              undefined,\n              false\n            )}</a>`\n          : getName(r.name, visibleRems, undefined, false);\n      })\n    );\n\n    return innerNames.join(\"\");\n  }\n  return \"\";\n}\n\nasync function getContent(content, visibleRems = [], remId, isWithAnchor) {\n  if (Array.isArray(content)) {\n    const nest = await Promise.all(\n      content\n        .filter(\n          (n) =>\n            typeof n === \"string\" || n.i === \"q\" || n.i === \"i\" || n.i === \"m\"\n        )\n        .map(async (r) => {\n          if (typeof r === \"string\") {\n            return r;\n          }\n\n          if (r.i === \"m\") {\n            if (r.x === true) {\n              const latexString = katex.renderToString(r.text, {\n                throwOnError: false,\n              });\n              return latexString;\n            }\n            return r.text;\n          }\n\n          if (r.i === \"i\") {\n            return `<img src=${r.url} width=${r.width} height={r.height} />`;\n          }\n\n          const existingRem = [...contentRems, ...visibleRems].find(\n            (o) => o._id === r._id\n          );\n          if (existingRem) {\n            return {\n              remId: existingRem._id,\n              name: existingRem.name,\n            };\n          }\n          const a = await getRemByID(r._id);\n          contentRems.push(a);\n          return {\n            remId: existingRem._id,\n            name: existingRem.name,\n          };\n        })\n    );\n\n    const innerContent = await Promise.all(\n      nest.map(async (r) => {\n        if (typeof r === \"string\") {\n          return r;\n        }\n        if (r.i === \"m\") {\n          return r.text;\n        }\n        return isWithAnchor\n          ? `<a href=\"#\" data-source=\"${remId}\" data-target=\"${\n              r.remId\n            }\" onclick=\"handleFocus(this)\">${await getName(\n              r.name,\n              visibleRems,\n              undefined,\n              false\n            )}</a>`\n          : getName(r.name, visibleRems, undefined, false);\n      })\n    );\n\n    return innerContent.join(\"\");\n  }\n  return \"\";\n}\n\nasync function bootstrapData(remId) {\n  const context = await window.RemNoteAPI.v0.get_context();\n\n  const documentRem = await window.RemNoteAPI.v0.get(context.documentId);\n  const visibleRems = (\n    await Promise.all(\n      documentRem.visibleRemOnDocument.map((id) => getRemByID(id))\n    )\n  ).filter((e) => e.found);\n\n  visibleRems.push(documentRem);\n\n  const nameWithAnchor = await Promise.all(\n    visibleRems.map((v) => getName(v.name, visibleRems, v._id, true))\n  );\n  const nameText = nameWithAnchor.map((e) =>\n    stripHtml(e)\n      .split(\" \")\n      .map((item, idx) => (idx % 2 === 0 ? item : item + \"\\n\")) // add line break to every second word\n      .join(\" \")\n  );\n  const content = await Promise.all(\n    visibleRems.map((v) => getContent(v.content, visibleRems, v._id, true))\n  );\n\n  const graphElements = visibleRems\n    .map((v, index) => {\n      const title = nameText[index];\n      const fifthBreakIndex = nthOccurrence(title, \" \", 10);\n      const processedTitle =\n        fifthBreakIndex >= 0 ? `${title.substr(0, fifthBreakIndex)}...` : title;\n      return {\n        data: {\n          id: v._id,\n          title: processedTitle,\n          fullTitle: nameWithAnchor[index],\n          content: content[index],\n          nodeColor: v.isDocument ? \"yellow\" : \"red\",\n        },\n      };\n    })\n    .filter((v) => v.data.title);\n\n  visibleRems.forEach((v) => {\n    if (v.children.length > 0) {\n      graphElements.push(\n        ...v.children.map((c) => ({\n          data: {\n            source: v._id,\n            target: c,\n            target_arrow_shape: \"diamond\",\n          },\n        }))\n      );\n    }\n\n    if (Array.isArray(v.content)) {\n      graphElements.push(\n        ...dedupeArr([\n          ...v.content\n            .filter((c) => c.i === \"q\")\n            .map((c) => ({\n              data: {\n                source: v._id,\n                target: c._id,\n                target_arrow_shape: \"vee\",\n              },\n            })),\n        ])\n      );\n    }\n\n    if (Array.isArray(v.name)) {\n      graphElements.push(\n        ...dedupeArr([\n          ...v.name\n            .filter(\n              (c) =>\n                c.i === \"q\" &&\n                !graphElements.some((g) => g?.data?.target === c._id)\n            )\n            .map((c) => ({\n              data: {\n                source: v._id,\n                target: c._id,\n                target_arrow_shape: \"vee\",\n              },\n            })),\n        ])\n      );\n    }\n  });\n  return graphElements;\n}\n\nexport default bootstrapData;\n","import React, { useEffect } from \"react\";\nimport cytoscape from \"cytoscape\";\nimport popper from \"cytoscape-popper\";\nimport coseBilkent from \"cytoscape-cose-bilkent\";\nimport tippy, { sticky } from \"tippy.js\";\nimport \"tippy.js/dist/tippy.css\";\nimport getGraphElements from \"./utils/buildData\";\nimport { convertStringToHtml } from \"./utils/dom\";\n\nwindow.handleFocus = function handleFocus(element) {\n  const cy = window.cy;\n  cy.fit(cy.$(`#${element.dataset.source}, #${element.dataset.target}`), 100);\n};\n\nfunction makePopper(ele) {\n  const ref = ele.popperRef();\n  const dummyDomEle = document.createElement(\"div\");\n  ele.tippy = tippy(dummyDomEle, {\n    onCreate: function (instance) {\n      instance.popperInstance.reference = ref;\n    },\n    lazy: false, // mandatory\n    plugins: [sticky],\n    content: () => {\n      const contentdiv = document.createElement(\"div\");\n      const { fullTitle, content } = ele.data();\n      const titleEl = document.createElement(\"h3\");\n      titleEl.appendChild(convertStringToHtml(fullTitle));\n      contentdiv.appendChild(titleEl);\n\n      if (content) {\n        const contentEl = document.createElement(\"div\");\n        contentEl.appendChild(convertStringToHtml(content));\n        contentdiv.appendChild(contentEl);\n      }\n\n      return contentdiv;\n    },\n    arrow: true,\n    placement: \"bottom\",\n    hideOnClick: false,\n    multiple: true,\n    // if interactive:\n    interactive: true,\n    sticky: true,\n    appendTo: document.body, // or append dummyDomEle to document.body\n    trigger: \"manual\", //when use program to handle\n  });\n}\n\nexport default function Home() {\n  useEffect(() => {\n    async function bootstrapData() {\n      const graphElements = await getGraphElements(\"GH5MRkMCJ6R6aoLbB\");\n      const filteredGraphElements = graphElements.filter((i) =>\n        i.data.title\n          ? true\n          : graphElements.some((s) => s.data.id === i.data.source) &&\n            graphElements.some((s) => s.data.id === i.data.target)\n      );\n      cytoscape.use(coseBilkent);\n      cytoscape.use(popper);\n      const cy = cytoscape({\n        container: document.getElementById(\"cy\"),\n        elements: filteredGraphElements,\n        style: [\n          {\n            selector: \"node\",\n            style: {\n              \"background-color\": \"data(nodeColor)\",\n              label: \"data(title)\",\n              color: \" #66ff66\",\n              \"font-size\": \"10px\",\n              \"text-wrap\": \"wrap\",\n              \"text-overflow-wrap\": \"anywhere\",\n            },\n          },\n          {\n            selector: \"node[[degree = 0]]\",\n            style: {\n              width: 8,\n              height: 8,\n            },\n          },\n          {\n            selector: \"node[[degree >= 1]][[degree <= 3]]\",\n            style: {\n              width: 10,\n              height: 10,\n            },\n          },\n          {\n            selector: \"node[[degree > 3]][[degree <= 5]]\",\n            style: {\n              width: 12,\n              height: 12,\n            },\n          },\n          {\n            selector: \"node[[degree > 5]][[degree <= 7]]\",\n            style: {\n              width: 14,\n              height: 14,\n            },\n          },\n          {\n            selector: \"node[[degree > 7]][[degree <= 9]]\",\n            style: {\n              width: 16,\n              height: 16,\n            },\n          },\n          {\n            selector: \"node[[degree > 9]]\",\n            style: {\n              width: 18,\n              height: 18,\n            },\n          },\n          {\n            selector: \"edge\",\n            style: {\n              width: 1,\n              \"line-color\": \"#ccc\",\n              \"target-arrow-color\": \"#ccc\",\n              \"target-arrow-shape\": \"data(target_arrow_shape)\",\n              \"curve-style\": \"bezier\",\n              \"arrow-scale\": 1,\n              label: \"data(label)\",\n              color: \"green\",\n              \"font-size\": \"7px\",\n              \"text-wrap\": \"wrap\",\n            },\n          },\n          {\n            selector: \"node.highlight\",\n            style: {\n              \"border-color\": \"#FFF\",\n              \"border-width\": \"1px\",\n            },\n          },\n          {\n            selector: \"node.semitransp\",\n            style: { opacity: \"0.2\" },\n          },\n          {\n            selector: \"edge.highlight\",\n            style: { \"mid-target-arrow-color\": \"#FFF\" },\n          },\n          {\n            selector: \"edge.semitransp\",\n            style: { opacity: \"0.2\" },\n          },\n        ],\n        layout: {\n          name: \"cose-bilkent\",\n          quality: \"default\",\n          // Whether to include labels in node dimensions. Useful for avoiding label overlap\n          nodeDimensionsIncludeLabels: true,\n          fit: true,\n          // Padding on fit\n          padding: 10,\n          // Whether to enable incremental mode\n          randomize: true,\n          // Node repulsion (non overlapping) multiplier\n          nodeRepulsion: 9000,\n          // Ideal (intra-graph) edge length\n          idealEdgeLength: 70,\n          // Divisor to compute edge forces\n          edgeElasticity: 0.45,\n          // Nesting factor (multiplier) to compute ideal edge length for inter-graph edges\n          nestingFactor: 0.1,\n          // Gravity force (constant)\n          gravity: 0.25,\n          // Maximum number of iterations to perform\n          numIter: 2500,\n          // Whether to tile disconnected nodes\n          tile: true,\n          // Type of layout animation. The option set is {'during', 'end', false}\n          animate: \"end\",\n          // Duration for animate:end\n          animationDuration: 500,\n          // Amount of vertical space to put between degree zero nodes during tiling (can also be a function)\n          tilingPaddingVertical: 10,\n          // Amount of horizontal space to put between degree zero nodes during tiling (can also be a function)\n          tilingPaddingHorizontal: 10,\n          // Gravity range (constant) for compounds\n          gravityRangeCompound: 1.5,\n          // Gravity force (constant) for compounds\n          gravityCompound: 1.0,\n          // Gravity range (constant)\n          gravityRange: 3.8,\n          // Initial cooling factor for incremental layout\n          initialEnergyOnIncremental: 0.5,\n        },\n      });\n\n      cy.ready(function () {\n        window.cy = cy;\n        cy.elements().forEach(function (ele) {\n          if (ele.isNode()) {\n            makePopper(ele);\n            ele.unbind(\"select\");\n            ele.bind(\"select\", (event) => event.target.tippy.show());\n\n            ele.unbind(\"unselect\");\n            ele.bind(\"unselect\", (event) => event.target.tippy.hide());\n          }\n        });\n\n        cy.on(\"mouseover\", \"node\", function (e) {\n          var sel = e.target;\n          cy.elements()\n            .difference(sel.outgoers().union(sel.incomers()))\n            .not(sel)\n            .addClass(\"semitransp\");\n          sel\n            .addClass(\"highlight\")\n            .outgoers()\n            .union(sel.incomers())\n            .addClass(\"highlight\");\n        });\n        cy.on(\"mouseout\", \"node\", function (e) {\n          var sel = e.target;\n          cy.elements().removeClass(\"semitransp\");\n          sel\n            .removeClass(\"highlight\")\n            .outgoers()\n            .union(sel.incomers())\n            .removeClass(\"highlight\");\n        });\n      });\n    }\n    bootstrapData();\n  }, []);\n  return (\n    <div>\n      <div id=\"cy\" />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}